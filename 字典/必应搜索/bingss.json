[{
  "enabled": true,
  "name": "必应",
  "showRule": "@js:\nlet key = java.hexDecodeToString(result);\nlet url1 = 'https://cn.bing.com/search?q='+key+'&mkt=zh-CN';\nif (url1 != '') {\n result = java.webView(null,url1,null);\njava.log(result)\n let j = org.jsoup.Jsoup.parse(result);\n rr1 = j.select('#b_results');\n url2 = j.select('*[title=\"下一页\"]').attr('href');\n} else {rr1='';url2='';}\n\nif (url2 != '') {\n url2 = 'https://cn.bing.com' + url2;\n Packages.java.lang.Thread.sleep(400);\n result = java.webView(null,url2,null);\n let j = org.jsoup.Jsoup.parse(result);\n j.select(\".b_rs\").remove();\n rr2 = j.select('#b_results');\n url3 = j.select('*[title=\"下一页\"]').attr('href');\n} else {rr2='<p>无第二页</p>';url3='';}\n\nif (url3 != '') {\n url3 = 'https://cn.bing.com' + url3;\n Packages.java.lang.Thread.sleep(200);\n result = java.webView(null,url3,null);\n let j = org.jsoup.Jsoup.parse(result);\n j.select(\".b_rs\").remove();\n rr3 = j.select('#b_results');\n} else {rr3='<p>无第三页</p>';}\n\nrr=rr1+rr2+rr3;\n\nresult = rr.replace(/https:\\/\\/www.zhihu.com\\/([^\\/]+\\/\\d+)[^\\s\\<>'\"]*/g,'zhihu://$1')\n.replace(/https:\\/\\/zhuanlan.zhihu.com\\/p\\/(\\d+)[^\\s<>'\"]*/g,'zhihu://articles/$1')\n.replaceAll('https://www.zhihu.com/people/','zhihu://people/')\n.replace(/https:\\/\\/tieba.baidu.com\\/p\\/(\\d+)/g,'com.baidu.tieba://unidispatch/pb?tid=$1')\n.replace(/https:\\/\\/jump2.bdimg.com\\/f\\?kw=([%A-z\\d一-ꀀ]+)/g,'com.baidu.tieba://unidispatch/frs?kw=$1')\n.replaceAll('https://www.coolapk.com/','coolmarket://')\n.replace(/https:\\/\\/www.bilibili.com\\/bangumi\\/play\\/ep(\\d+)/g,'bilibili://pgc/season/ep/$1')\n.replaceAll('https://www.bilibili.com/video','bilibili://video')\n.replaceAll('https://space.bilibili.com/','bilibili://space/')\n.replaceAll('href=\"/search?q=','href=\"https://cn.bing.com/search?q=');\n\nvar aly = new JavaImporter(Packages.org.jsoup.nodes.Element,\nPackages.org.jsoup.Jsoup,\nPackages.org.jsoup.select.Elements);\nwith (aly) {\n\n// 解析HTML文档\nresult = Jsoup.parse(result);\nresult.select(\"#rs_root\").remove();\n\n// 查找所有的 <a> 标签\nlet links = result.select(\"a\");\nfor (link of links) {\n// 获取 <a> 标签内的标签\n let h2 = link.selectFirst(\"h2\");\n  if (h2 != null) {\n   let content = h2.text();\n   //移除 <h2> 标签\n   link.select(\"h2\").remove();\n   //link.removeChild(h2);另一方法，特殊情况会报错\n   //创建一个新的<h2> 标签\n   let H2 = new Element(\"h2\").appendChild(new Element(\"a\").attr(\"href\", link.attr(\"href\")).text(content));\n    //新<h2> 插入到原来的位置\n    link.replaceWith(H2);\n  }\n let h3 = link.selectFirst(\"h3\");\n  if (h3 != null) {\n   let content = h3.text();\n   //移除 <h3> 标签\n   link.select(\"h3\").remove();\n   //创建一个新的<h3> 标签\n   let H3 = new Element(\"h3\").appendChild(new Element(\"a\").attr(\"href\", link.attr(\"href\")).text(content));\n    //新<h3> 插入到原来的位置\n    link.replaceWith(H3);\n  }\n}\n\nlet imgs = result.select(\"img\");\nfor (img of imgs) {\n img.replaceWith(new Element(\"span\").text(\"🖼️\"));\n }\n\nresult.select(\"#b_results>li\").before(\"<br><br>\");\n\n}\n\nlet tishi = `<h2>搜索词：<a href=\"${url1}\">${key}</a></h2><br>`;\n\ntishi+result.html();",
  "sortNumber": 2,
  "urlRule": "@js:\n`data:;base64,${java.base64Encode(key)},{'type':''}`"
}]