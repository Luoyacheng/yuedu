[{
  "bookSourceComment": "    'host': 'app-api.pixiv.net',\n\n\t\t\t'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36 Edg/131.0.2903.113',\n\n❤️code：200❤️message：OK❤️headers：❤️raw：Response{protocol=http/1.1, code=200, message=OK, url=https://app-api.pixiv.net/web/v1/login?code_challenge=1CCsEWtwY7FlfE19PhTANzWxE100AD_70IBxyd0c84Q&code_challenge_method=S256&client=pixiv-android,{headers:{%27authorization%27:%20%27%27}}}❤️string：Response{protocol=http/1.1, code=200, message=OK, url=https://app-api.pixiv.net/web/v1/login?code_challenge=1CCsEWtwY7FlfE19PhTANzWxE100AD_70IBxyd0c84Q&code_challenge_method=S256&client=pixiv-android,{headers:{%27authorization%27:%20%27%27}}}❤️cookie：undefined",
  "bookSourceGroup": "🙈pixiv小说",
  "bookSourceName": "🌈pixiv小说",
  "bookSourceType": 0,
  "bookSourceUrl": "洛娅橙-pixiv小说",
  "bookUrlPattern": "http://127.0.0.1/0",
  "concurrentRate": "",
  "coverDecodeJs": "",
  "customOrder": 12,
  "enabled": true,
  "enabledCookieJar": true,
  "enabledExplore": true,
  "exploreUrl": "@js:\nvar obj = {\n\t动态: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\turl = 'https://app-api.pixiv.net/v1/novel/follow?restrict=public';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl\n\t\t\t}}`},\n\t推荐: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\turl = 'https://app-api.pixiv.net/v1/novel/recommended?include_privacy_policy=true&filter=for_android&include_ranking_novels=true';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl\n\t\t\t}}`},\n\t收藏: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\t\tlet id = source.getLoginInfoMap().get('id');\n\t\t\t\turl = 'https://app-api.pixiv.net/v1/user/bookmarks/novel?user_id='+id+'&restrict=public';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl\n\t\t\t}}`,\n\t\t\"wb\": 1},\n\t追更: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\t\turl = 'https://app-api.pixiv.net/v1/watchlist/novel';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl\n\t\t\t}}`}\n\t\n\t}\n\n\nvar sort = [];\npush = (title, url, size, wrap) => sort.push({\n    \"title\": title,\n    \"url\": url,\n    \"style\": {\n      layout_flexGrow: size || 1,\n      layout_flexBasisPercent: -1,\n      layout_wrapBefore: wrap ? true : false\n     }\n  });\n\nfor (x in obj) {\npush(x, obj[x].url, obj[x].fg, obj[x].wb);\n}\nJSON.stringify(sort);",
  "header": "@js:\n(()=>{\n\tlet headers = gethd();\n//\tjava.log('🍊'+JSON.stringify(headers,null,4));\n\treturn JSON.stringify(headers);\n})();",
  "jsLib": "ua = 'PixivAndroidApp/5.0.166 (Android 14; RMX3366)';\nappv = '5.0.166';\na_l = 'zh-CN';\na_e = 'gzip';\n\nbiaoq = new RegExp('^(?:修仙|奇幻|后宫|纯爱|乱伦|母女|母子|父女|幼女|正太|足交|肛交|丝袜|催眠|系统|原创|续写|软饭流|修罗场|规则怪谈|女性视角)$');\n\nfunction timemd5(time) {\n\tconst {java, source} = this;\nlet salt = '28c1fdd170a5204386cb1313c7077b34f83e4aaf4aa829ce78c231e05b0bae2c';\nlet hash = java.md5Encode(time + salt);\n\treturn hash;\n}\n\nfunction gethd() {\n\tconst {java, source} = this;\nlet time = java.timeFormatUTC(Date.now(),\"yyyy-MM-dd'T'HH:mm:ss'+00:00'\",8*60*60*1000);\nlet hash = this.timemd5(time);\nlet atk = source.getLoginHeader()||'';\n\tif (atk) {atk = String('Bearer '+atk);}\n   return headers = {\n    'x-client-time': time,\n    \t'user-agent': ua,\n    \t'accept-language': a_l,\n    \t'accept-encoding': a_e,\n    \t'authorization': atk,\n    \t'app-os': 'Android',\n    \t'app-os-version': 'Android 14',\n    \t'app-version': appv,\n    'x-client-hash': hash\n    \t }\n};\n\nfunction leng(str) {\n\tlet length = 0;\n\tconst fuhao = ',.?!:;()[]\"';\n\tconst fuhao2 = '📘';\n\tfor (char of str) {\n\t\tif (fuhao.includes(char) ) length += 0.5;\n\t\telse if (fuhao2.includes(char) ) length += 2;\n\t\telse length += 1;\n\t\t}\n\t\treturn length;\n}\n\nconst imgoptions = {\n  headers: {\n    'user-agent': 'PixivIOSApp/5.8.0',\n    'accept-encoding': 'gzip, br',\n    'referer': 'https://app-api.pixiv.net/',\n    'host': 'i.pximg.net'\n    }\n  };",
  "lastUpdateTime": 1736772534307,
  "loginCheckJs": "//java.toast('登录检查：'+result);\n\nif (result.code() == 400) {\n\tsource.login();\n\tPackages.java.lang.Thread.sleep(500);\n\tlet headers = gethd();\n\tresult = java.connect(result.url(),headers);\n\t}\n\nresult",
  "loginUi": "[\n    {\n        name: \"token说明\",\n        type: \"button\",\n        action: \"java.longToast(`\ntoken说明：填写该值后点击右上角√进行登录`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.4\n        }\n    },\n    {\n        name: \"id说明\",\n        type: \"button\",\n        action: \"java.longToast(`\nid说明：登录时该值为空会自动填写该值，这是登录账号的ID（可手动更改）。\n发现页的收藏分类加载的该ID的收藏`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.4\n        }\n    },\n    {\n        name: \"token\",\n        type: \"text\"\n    },\n    {\n        name: \"id\",\n        type: \"text\"\n    },\n     {\n        name: \"↓　追　更　该　书　\",\n        type: \"button\",\n        action: \"java.longToast(`\nid说明：登录时该值为空会自动填写该值，这是登录账号的ID（可手动更改）。\n发现页的收藏分类加载的该ID的收藏`);\",\n        style: {\n            \"layout_flexGrow\": 2,\n            \"layout_flexBasisPercent\": 0.5\n        }\n    },\n     {\n        name: \"说明\",\n        type: \"button\",\n        action: \"java.longToast(`\nid说明：登录时该值为空会自动填写该值，这是登录账号的ID（可手动更改）。\n发现页的收藏分类加载的该ID的收藏`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n     {\n        name: \"❌\",\n        type: \"button\",\n        action: \"java.longToast(`\nid说明：登录时该值为空会自动填写该值，这是登录账号的ID（可手动更改）。\n发现页的收藏分类加载的该ID的收藏`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.15\n        }\n    },\n    {\n        name: \"书名\",\n        type: \"text\"\n    },\n    {\n        name: \"↓　收　藏　该　章\",\n        type: \"button\",\n        action: \"java.longToast(`\nid说明：登录时该值为空会自动填写该值，这是登录账号的ID（可手动更改）。\n发现页的收藏分类加载的该ID的收藏`);\",\n        style: {\n            \"layout_flexGrow\": 2,\n            \"layout_flexBasisPercent\": 0.5\n        }\n    },\n     {\n        name: \"说明\",\n        type: \"button\",\n        action: \"java.longToast(`\nid说明：登录时该值为空会自动填写该值，这是登录账号的ID（可手动更改）。\n发现页的收藏分类加载的该ID的收藏`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n     {\n        name: \"❌\",\n        type: \"button\",\n        action: \"java.longToast(`\nid说明：登录时该值为空会自动填写该值，这是登录账号的ID（可手动更改）。\n发现页的收藏分类加载的该ID的收藏`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.15\n        }\n    },\n    {\n        name: \"章节\",\n        type: \"text\"\n    },\n    {\n        name: \"↓　关 注 该 作 者　\",\n        type: \"button\",\n        action: \"java.longToast(`\nid说明：登录时该值为空会自动填写该值，这是登录账号的ID（可手动更改）。\n发现页的收藏分类加载的该ID的收藏`);\",\n        style: {\n            \"layout_flexGrow\": 2,\n            \"layout_flexBasisPercent\": 0.5\n        }\n    },\n     {\n        name: \"说明\",\n        type: \"button\",\n        action: \"java.longToast(`\nid说明：登录时该值为空会自动填写该值，这是登录账号的ID（可手动更改）。\n发现页的收藏分类加载的该ID的收藏`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n     {\n        name: \"❌\",\n        type: \"button\",\n        action: \"java.longToast(`\nid说明：登录时该值为空会自动填写该值，这是登录账号的ID（可手动更改）。\n发现页的收藏分类加载的该ID的收藏`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.15\n        }\n    },\n    {\n        name: \"作者\",\n        type: \"text\"\n    },\n    {\n        name: \"💍注册 \",\n        type: \"button\",\n        action: \"web()\"\n    },\n    {\n        name: \"♤登出\",\n        type: \"button\",\n        action: \"re()\"\n    },\n    {\n    \tname: \"💬说明\",\n    \ttype: \"button\",\n    \taction: \"sm()\"\n    \t},\n    \t{\n        name: \"🌐测试\",\n        type: \"button\",\n        action: \"ceshi()\"\n    },\n    \t{\n        name: \"🆕版本更新\",\n        type: \"button\",\n        action: \"gengxin()\"\n    },\n    \t{\n        name: \"同书名书架共存\",\n        type: \"button\",\n        action: \"gongcun()\"\n    }\n]",
  "loginUrl": "function gongcun() {\nlet gc = source.get('gc');\nif(gc!=1) {source.put('gc',1);java.toast('已开启');}\nelse {source.put('gc',0);java.toast('已关闭');}\n\t}\n\nfunction web() {\n\tlet url = 'https://app-api.pixiv.net/web/v1/login?code_challenge=1CCsEWtwY7FlfE19PhTANzWxE100AD_70IBxyd0c84Q&code_challenge_method=S256&client=pixiv-android';\n\t//url='https://accounts.pixiv.net/login';\n\t//url=\"https://www.baidu.com\"\n\turl=\"https://accounts.pixiv.net/login\"\n\trr=java.startBrowserAwait(url+`,{\n\t\theaders:{\n\t\t\t'authorization': ''\n\t\t\t}\n\t\t}`,'登录');\n\tck=cookie.getCookie('https://accounts.pixiv.net');\n\tsource.setVariable('❤️code：'+rr.code()+'❤️message：'+rr.message()+'❤️headers：'+rr.headers().get('authorization')+'❤️raw：'+rr.raw()+'❤️string：'+rr.toString()+'❤️cookie：'+rr.cookies+'❤️ck：'+ck)\n\t}\r\nfunction login() {\nlet time = java.timeFormatUTC(Date.now(),\"yyyy-MM-dd'T'HH:mm:ss'+00:00'\",8*60*60*1000);\nlet hash = timemd5(time);\n\tlet headers = {\n    'user-agent': 'PixivAndroidApp/5.0.155 (Android 6.0; Pixel C)',\n    'accept-encoding': a_e,\n    'content-type': 'application/x-www-form-urlencoded',\n    'x-client-hash': hash,\n    'accept-language': a_l,\n    'app-version': appv,\n    'app-os-version': 'Android 6.0',\n    'x-client-time': time,\n    'app-os': 'Android'\n  };\n  let url = 'https://oauth.secure.pixiv.net/auth/token';\n  var Info=source.getLoginInfoMap();\n  let tk = String(Info['token'])||result['token'];\n  Info['token'] = tk;\r\n  //let pw = String(Info['密码'])||result['密码'];\n  let body = `client_id=MOBrBDS8blbauoSck0ZfDbtuzpyT&client_secret=lsACyCD94FhDUtGTXi3QzcFE2uU1hqtDaKeqrdwj&grant_type=refresh_token&refresh_token=${tk}&include_policy=true`;\ntry {\n\tlet rr = java.post(url,body,headers).body();\n\tlet atk = rr.match(/\"access_token\"[:\\s\"]+([^\"]+)/)[1];\n\tsource.putLoginHeader(atk);\n\tlet \tid = com.jayway.jsonpath.JsonPath.read(rr, \"$.user.id\");\n\tif (Info['id']=='') Info['id']= id;\n\tsource.putLoginInfo(JSON.stringify(Info));\n\tjava.toast('\\n😆登录成功');\n\t} catch(err) {\n\t\tjava.toast('\\n💔登录失败');\n\t\t}\n\n  \t//为了显示结果\n  Packages.java.lang.Thread.sleep(500);\n\t}",
  "respondTime": 180000,
  "ruleBookInfo": {
    "author": "$.novel_series_detail.user.name\n<js>\nlet uid = java.get('uid');\nlet auth = result || String(book.author).replace(/[\\u200b]+/,'')\nif (uid == '') {uid = java.getString('$.novel_series_detail.user.id');}\nlet Info=source.getLoginInfoMap();\nInfo['作者'] = auth;\ncache.putMemory('uid',uid);\nsource.putLoginInfo(JSON.stringify(Info));\n'\\u200b' + auth\n</js>",
    "canReName": "1",
    "init": "<js>\n\nvar sid = java.get('sid');\nif (sid == '🇨🇳'||sid == '') {\n\tlet Info=source.getLoginInfoMap();\n\tlet bkn = String(book.name);\n\tlet id = java.hexDecodeToString(result).match(/\\d+$/)[0];\n\tInfo['书名'] = '';\n\tcache.putMemory('sid','');\n\tInfo['章节'] = bkn;\n\tcache.putMemory('id',id);\n\tsource.putLoginInfo(JSON.stringify(Info));\n\tlet length = leng(bkn);\n\t\tif (length > 18) book.intro= '《'+book.name+'》\\n'+ java.get('jianjie');\n\t\t\n\trr='1';\n\t}\n\nelse {\nlet url = 'https://app-api.pixiv.net/v2/novel/series?series_id=' + sid;\n//修正bookurl\nbook.bookUrl = `data:;base64,${java.base64Encode(url)},{'type':''}`;\n\ntry {\n\nlet headers = gethd();\njg = java.connect(url, headers);\nrr = jg.body();\nif (jg.code() == 400) {\n\tsource.login();\n\tPackages.java.lang.Thread.sleep(500);\n\tlet headers = gethd();\n\trr = java.get(url, headers).body();\n\t}\n\n} catch(err) {\n\trr={};\n\tjava.toast('详情页链接加载失败'+sid);\n\t}\n\n//设置解析结果\njava.setContent(rr);\n\n//更新更新时间\ntry {\nlet tm = java.getString('$.novel_series_latest_novel.create_date');\nlet d = new Date(tm);\nd = java.timeFormatUTC(d,'yy/MM/dd',8*60*60*1000);\nbook.kind = String(book.kind).replace(/\\d+\\/\\d+\\/\\d+|$/,d).replace('null','');\n} catch(err) {java.toast('详情页内容错误');}\n\n//获取书名并净化\nlet bkn = String(java.getString('$.novel_series_detail.title')).replace(/^《(.+)》$/,'$1');\nbook.name = bkn.replace(/[(（].{0,9}((?:仙侠|纯爱|后宫|萝莉).?){3,}.{0,9}[)）](?=\\s*[一-ꀀ])/,'');\n\njava.log('┌获取书名\\n[99:99.999] └'+book.name);\n\n//获取书名失败\nif (book.name == '') {\n\t//效果，unicode转字符\n\t// let ee = JSON.stringify(JSON.parse(rr) );\n\tlet txte = java.getString('$..user_message',rr);\n\t//弹出提示，sid相应序列不存在\n\tjava.longToast('\\n'+txte);\n\t} else {\n\t//放入书名\n\tlet Info=source.getLoginInfoMap();\n\tInfo['书名'] = book.name;\n\tcache.putMemory('sid',sid);\n\tInfo['章节'] = '';\n\tcache.putMemory('id','');\n\tsource.putLoginInfo(JSON.stringify(Info));\n\t\n\t//同名共存\n\tif (source.get('gc') == 1) book.name='📘'+book.name;\n\t}\n\n//补充封面链接\nif (book.coverUrl == null) {\n\tlet img = java.getString('$.novel_series_latest_novel.image_urls.large');\n\tbook.coverUrl = img+','+JSON.stringify(imgoptions);\n\t\njava.log('┌获取封面\\n[99:99.999] └'+book.coverUrl);\n}\n\n//计算书名长度\nlet length = leng(String(book.name));\n//大于18个全角字符\nif (length > 18) length= '《'+String(book.name).replace(/^📘/,'')+'》\\n';\nelse length = '';\n\nlet jianjie = java.getString('$.novel_series_detail.caption');\nbook.intro = length+java.get('jianjie');\njava.put('jianjie',jianjie);\ncache.put('bookr',rr);\n}\n\n\trr\n</js>",
    "intro": "",
    "lastChapter": "$.novel_series_latest_novel.title##【?{{book.name}}】?",
    "name": "",
    "tocUrl": "{{book.bookUrl}}",
    "wordCount": "$.novel_series_detail.total_character_count"
  },
  "ruleContent": {
    "content": "script.0@html\n<js>\nlet Info=source.getLoginInfoMap();\nlet id = String(chapter.url).match(/\\d+$/)[0];\nInfo['章节'] = chapter.title;\ncache.putMemory('id',id);\nsource.putLoginInfo(JSON.stringify(Info));\n\nlet rr = result.match(/novel:\\s*({.+})/)[1];\n//let rr = JSON.stringify(JSON.parse(rs), null, 4);\nlet urls = java.getString('$..urls',rr);\nlet tt = String(java.getString('$.text',rr));\nlet img1 = tt.match(/\\[uploadedimage\\:\\d+\\]/g)||'';\nlet img2 = tt.match(/\\[pixivimage\\:[\\d\\-]+\\]/g)||'';\nfor (x of img1) {\n\tlet id = x.match(/\\d+/)[0];\n\tlet url = java.getString('$..'+id+'.urls.original',rr);\n\tlet re = new RegExp('\\\\[uploadedimage\\\\:'+id+'\\\\]');\n\tlet hd = ','+JSON.stringify(imgoptions);\n\ttt = tt.replace(re,'<img src=\"'+url+hd+'\"/>');\n\t}\nfor (x of img2) {\n\tlet id = x.match(/[\\d\\-]+/)[0];\n\tlet url = java.getString('$..'+id+'..images.original',rr);\n\tif (url=='null') url = java.getString('$..'+id+'..images.medium',rr);\n\tlet re = new RegExp('\\\\[pixivimage\\\\:'+id+'\\\\]');\n\tlet hd = ','+JSON.stringify(imgoptions);\n\ttt = tt.replace(re,'<img src=\"'+url+hd+'\"/>');\n\t}\ntt.replaceAll('[newpage]','\\n—换页符—\\n').replace(/\\[\\[jumpuri\\:(.+)\\>.+\\]\\]/,'🖇️$1🖇️')\n</js>",
    "imageStyle": "",
    "title": ""
  },
  "ruleExplore": {
    "author": "$.user.name\n<js>\nlet uid = java.getString('$.user.id');\njava.put('uid',uid);\nresult\n</js>",
    "bookList": "<js>\nif (baseUrl.startsWith('http://127.0') ) {\n\trr = [{}];\n\t} else {\nlet nurl = java.getString('$.next_url');\nif (nurl == '') {\n\tjava.toast('发现页到底了');\n\tsource.put('nurl','http://127.0.0.1');\n\t}\nelse {\n\tsource.put('nurl',nurl);\n\t}\nif (baseUrl.includes('/watchlist/novel') ) {\n\trr = java.getElement(\"$.series\");\n\t} else { rr = java.getElement(\"$.novels\");}\n\n}\nrr\n</js>",
    "bookUrl": "<js>\nlet id = java.getString('$.id');\nlet sid = java.getString('$.series.id');\nbook.putCustomVariable('id：'+id+'，sid：'+sid);\nlet rr = 'https://app-api.pixiv.net/webview/v2/novel?id=' + id;\n\nif (baseUrl.includes('/watchlist/novel') ) {\n\tsid = id;\n\tif (source.get('gc') == 1) book.name='📘'+book.name;\n}\nelse if (sid=='') {sid='🇨🇳';}\nelse {\n\tlet jj = java.get('jianjie');\n\tjava.put('jianjie',book.name+'\\n'+jj);\n}\njava.put('sid',sid);\n`data:;base64,${java.base64Encode(rr)},{'type':''}`\n</js>",
    "coverUrl": "<js>\nif (baseUrl.includes('/watchlist/novel') ) {url = java.getString('$.url');}\nelse {url = java.getString('$.image_urls.large');}\n\nurl+','+JSON.stringify(imgoptions);\n</js>",
    "intro": "<js>\nlet jj = java.get('jianjie');\nlet rr = '\\n' + java.getString('$.caption');\nlet rs = java.htmlFormat(rr);\njava.put('jianjie',rs);\njj + rs\n</js>",
    "kind": "<js>\nif (baseUrl.includes('/watchlist/novel') ) {\n\trrr = '';\n\ttm = java.getString('$.last_published_content_datetime');\n\t} else {\n\t\tlet tags = java.getStringList('$.tags..name');\n\t\t//将list数组处理为js正常数组，并且保证了元素值为js字符串\n\t\trr=String(tags).slice(1,-1).split(', ');\n\t\t//下面方式会复杂了点，但能保证元素也能含逗号\n\t\t//rr = Array.from(tags);rr=rr.join().split(',');\n\t\trrr = rr.filter(i => biaoq.test(i) );\n\t\trr.forEach(x=>{\n\t\t\tif (x=='萝莉') {\n\t\t\t\tif (!rrr.includes('幼女')) rrr.unshift(x);\n\t\t\t\t}\n\t\t\telse if (x=='仙侠'||x=='古风') {\n\t\t\t\tif (!rrr.includes('修仙')) rrr.unshift(x);\n\t\t\t\t}\n\t});\n\t\ttm = java.getString('$.create_date');\n}\nlet d=new Date(tm);\nd=java.timeFormatUTC(d,'yy/MM/dd',8*60*60*1000);\n\nrrr.toString()+','+d\n</js>",
    "lastChapter": "",
    "name": "$.title\n<js>\nlet bookn = String(java.getString('$.series.title')).replace(/^《(.+)》$/,'$1');\nif (bookn != '') {\n\tjava.put('jianjie', '《'+bookn+'》\\n');\n\tresult = result.replace(bookn,'♸').replace(/[《【]?♸[】》]?/,'')||result;\n\t}\nresult = result.replace(/[(（].{0,9}((?:仙侠|纯爱|后宫|萝莉).?){3,}.{0,9}[)）](?=\\s*[一-ꀀ])/,'').replace(/《(.+)》/,'$1');\nresult\n</js>",
    "wordCount": "$.text_length"
  },
  "ruleSearch": {
    "author": "$.user.name\n<js>\nlet uid = java.getString('$.user.id');\njava.put('uid',uid);\nresult\n</js>",
    "bookList": "<js>\npage=cache.getFromMemory('page');\ncache.deleteMemory('page');\n//source.setVariable(src)\nif (baseUrl.startsWith('http://127.')) {rr = [{}];}\n\nelse {\nrr = java.getElement('$.novels');\nnurl = java.getString('$.next_url');\njava.log('nurl🍊'+nurl+'🍊');\nif (rr.length<7&&page==1&&nurl!='') {\n\t//处理不触发下一页且有nurl的情况\n\tPackages.java.lang.Thread.sleep(500);\n\trs = java.ajax(nurl);\n\tjava.setContent(rs)\n\trrr = java.getElement('$.novels');\n\t//合并对象函数，可直接用\n\trr.addAll(rrr);\n\tnurl = java.getString('$.next_url');\n}\n\nif (nurl == '') {\n\tjava.toast('搜索页到底了');\n\tsource.put('nurl','http://127.0.0.1');\n\t} else {source.put('nurl',nurl);}\n\n}\nrr\n</js>",
    "bookUrl": "<js>\nlet id = java.getString('$.id');\n//java.log('🍊'+id+'🍊');\nlet sid = java.getString('$.series.id');\nbook.putCustomVariable('id：'+id+'，sid：'+sid);\nif (sid=='') {\n\tsid='🇨🇳';\n\t} else {\n\tlet jj = java.get('jianjie');\n\tjava.put('jianjie',book.name+'\\n'+jj);\n\t}\nlet rr = 'https://app-api.pixiv.net/webview/v2/novel?id=' + id;\njava.put('sid',sid);\n`data:;base64,${java.base64Encode(rr)},{'type':''}`\n</js>",
    "checkKeyWord": "10180126",
    "coverUrl": "$.image_urls.large\n<js>\nresult+','+JSON.stringify(imgoptions);\n</js>",
    "intro": "<js>\nlet jj = java.get('jianjie');\nlet rr = '\\n' + java.getString('$.caption');\nlet rs = java.htmlFormat(rr);\njava.put('jianjie',rs);\njj + rs\n</js>",
    "kind": "<js>\njava.getStringList(String(source.ruleExplore.kind))\n</js>",
    "name": "$.title\n<js>\nlet bookn = String(java.getString('$.series.title')).replace(/^《(.+)》$/,'$1');\nif (bookn != '') {\n\tjava.put('jianjie', '《'+bookn+'》\\n');\n\tresult = result.replace(bookn,'♸').replace(/[《【]?♸[】》]?/,'')||result;\n\t}\nresult = result.replace(/[(（].{0,9}((?:仙侠|纯爱|后宫|萝莉).?){3,}.{0,9}[)）](?=\\s*[一-ꀀ])/,'').replace(/《(.+)》/,'$1');\nresult\n</js>",
    "wordCount": "$.text_length"
  },
  "ruleToc": {
    "chapterList": "<js>\nlet sid = java.get('sid');\nif (sid == '🇨🇳') {rr=[result];}\nelse {\n\tlet i = java.get('i');\n\tif (i==0) {\n\t\tjava.setContent(cache.get('bookr'));\n\t\t}\nrr = java.getElement('$.novels');\n}\nrr\n</js>",
    "chapterName": "<js>\nlet sid = java.get('sid');\nif (sid == '🇨🇳') {cc=book.name}\nelse {\nlet title = java.getString('$.title')\ntitle = String(title).replace(/[(（].{0,9}((?:仙侠|纯爱|后宫|萝莉).?){3,}.{0,9}[)）](?=\\s*[一-ꀀ])/,'');\nlet bkn=String(book.name).replace(/^📘|[。？！]+$/g,'');\n//消除后不剩字则不消除\ncc = title.replace(bkn,'♸').replace(/[《【]?♸[。？！]*[】》]?/,'')||title;\n\t}\n\tcc\n</js>",
    "chapterUrl": "<js>\nlet sid = java.get('sid');\nif (sid == '🇨🇳') {\n\t\tuu=java.hexDecodeToString(result);\n\t\tbook.putCustomVariable('单贴链接：'+uu);\n\t}\nelse {\nlet id = java.getString('$.id');\nuu='https://app-api.pixiv.net/webview/v2/novel?id=' + id\n}\nuu\n</js>",
    "isPay": "",
    "nextTocUrl": "$.next_url\n<js>\nif (result) {\njava.put('i',1);\n}\nresult\n</js>",
    "preUpdateJs": "java.put('i',0);",
    "updateTime": "$.create_date\n<js>\nif (result) {\nlet d=new Date(result);\nupt=java.timeFormatUTC(d,\"yyyy/MM/dd HH:mm\",8*60*60*1000);\n}\nelse '';\n</js>"
  },
  "searchUrl": "<js>\nif (page == 1) {\ncache.putMemory('page',page);\n\tif (/\\d{5,}$/.test(key) ) {\n\t\tlet sid = key.match(/\\d+$/)[0];\n\t\tjava.put('sid',sid);\n\t\turl = 'http://127.0.0.1/0'\n\t\t}\n\t\telse if (/^\\u200b/.test(key)) {\n\t\t\tlet uid = cache.getFromMemory('uid');\n\t\t\turl = 'https://app-api.pixiv.net/v1/user/novels?filter=for_android&user_id=' + uid;}\n\t\telse { url = 'https://app-api.pixiv.net/v1/search/novel?filter=for_android&merge_plain_keyword_results=true&word='+key;}\n\n} else {url = source.get('nurl');}\n\turl\n</js>",
  "weight": 0
}]
